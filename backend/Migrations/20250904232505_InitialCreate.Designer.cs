// <auto-generated />
using System;
using AdminPanel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Migrations
{
    [DbContext(typeof(AdminPanelDbContext))]
    [Migration("20250904232505_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AdminPanel.Models.FormSubmission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssigneeId")
                        .HasColumnType("longtext");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Type", "Brand", "Status");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("AdminPanel.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Segment")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Variants")
                        .IsRequired()
                        .HasColumnType("json");

                    b.HasKey("Id");

                    b.HasIndex("Brand", "Category", "Status");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AdminPanel.Models.Station", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("BrandVisibility")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Chargers")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("Latitude", "Longitude");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("AdminPanel.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BrandAccess")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdminPanel.Models.Product", b =>
                {
                    b.OwnsOne("AdminPanel.Models.ProductAvailability", "Availability", b1 =>
                        {
                            b1.Property<string>("ProductId")
                                .HasColumnType("varchar(255)");

                            b1.Property<bool>("InStock")
                                .HasColumnType("tinyint(1)");

                            b1.Property<int>("LeadTimeDays")
                                .HasColumnType("int");

                            b1.Property<string>("Regions")
                                .IsRequired()
                                .HasColumnType("json");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("AdminPanel.Models.ProductInventory", "Inventory", b1 =>
                        {
                            b1.Property<string>("ProductId")
                                .HasColumnType("varchar(255)");

                            b1.Property<int>("Available")
                                .HasColumnType("int");

                            b1.Property<int>("ReorderLevel")
                                .HasColumnType("int");

                            b1.Property<int>("Reserved")
                                .HasColumnType("int");

                            b1.Property<int>("TotalStock")
                                .HasColumnType("int");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("AdminPanel.Models.ProductPerformance", "Performance", b1 =>
                        {
                            b1.Property<string>("ProductId")
                                .HasColumnType("varchar(255)");

                            b1.Property<decimal>("ConversionRate")
                                .HasColumnType("decimal(5,4)");

                            b1.Property<int>("Inquiries30d")
                                .HasColumnType("int");

                            b1.Property<int>("Quotes30d")
                                .HasColumnType("int");

                            b1.Property<int>("Views30d")
                                .HasColumnType("int");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("AdminPanel.Models.ProductPricing", "Pricing", b1 =>
                        {
                            b1.Property<string>("ProductId")
                                .HasColumnType("varchar(255)");

                            b1.Property<decimal>("B2BBasePrice")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("B2CPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("CostPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("MarginPercent")
                                .HasColumnType("decimal(5,2)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Availability")
                        .IsRequired();

                    b.Navigation("Inventory")
                        .IsRequired();

                    b.Navigation("Performance")
                        .IsRequired();

                    b.Navigation("Pricing")
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Models.Station", b =>
                {
                    b.OwnsOne("AdminPanel.Models.StationContact", "Contact", b1 =>
                        {
                            b1.Property<string>("StationId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("SocialLinks")
                                .IsRequired()
                                .HasColumnType("json");

                            b1.HasKey("StationId");

                            b1.ToTable("Stations");

                            b1.WithOwner()
                                .HasForeignKey("StationId");
                        });

                    b.Navigation("Contact")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
